{"version":3,"sources":["static/icon/svg/delete.svg","static/icon/search.svg","static/icon/notification.svg","static/avatar_user.jpg","static/icon/svg sync nonrecursive //.(png|jpe?g|svg)$","static/icon/svg/ar_pr.svg","static/icon/svg/collapse.svg","static/icon/svg/dashboard.svg","static/icon/svg/database_maintenance.svg","static/icon/svg/dispatch_board.svg","static/icon/svg/driver_payroll.svg","static/icon/svg/ifta.svg","static/icon/svg/logout.svg","static/icon/svg/maintenance.svg","static/icon/svg/order_entry.svg","static/icon/svg/planner.svg","static/icon/svg/purchase_order.svg","static/icon/svg/quotation.svg","static/icon/svg/setting.svg","static/icon/svg/taxes.svg","static/icon/svg/vendor_management.svg","component/App/navbar_data.js","component/App/sidebar.js","component/App/index.js","component/header/index.js","component/header/header.js","component/General/Grid.js","component/FuelOptimization/Location.js","component/General/FileUpload.js","component/FuelOptimization/DetailsInput.js","component/FuelOptimization/addDest.js","component/FuelOptimization/details.js","component/FuelOptimization/map.js","component/General/Header.js","component/FuelOptimization/RouterBox.js","component/FuelOptimization/nearbyMarkers.js","component/FuelOptimization/getMinCostRoute.js","component/FuelOptimization/showGasStation.js","component/FuelOptimization/fuel.js","component/FuelOptimization/index.js","routes/fuelop.js","routes/index.js","index.js","static/icon/svg/marker.svg","static/icon/svg/marker_second.svg","static/icon/svg/stops.svg","static/icon/svg/add.svg"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","nav_bar","LOGISITCS","label","path","ACCOUNTING","SERVICES","String","prototype","image_format","arr","this","split","item","replace","charAt","toUpperCase","join","images","r","image_name","slice","hash_value","image_obj","index","importAll","require","SidebarJSX","className","to","src","key","nested_item","nested_index","activeClassName","activeStyle","background","Sidebar","React","Component","Header","search","placeholder","type","profile","notification","stack","display","gridTemplateColumns","width","grid","boxSizing","Stack","props","style","children","Grid","LocationSearch","onSuggestSelect","val","handleChange","name","flexEnable","onClose","close","closeImage","onClick","initialValue","alignItems","marginBottom","marginLeft","height","cursor","UploadFieldJSX","uploadfieldstyle","addfont","ref","fileName","usa","onChange","button","htmlFor","UploadField","handleFileUpload","current","reader","FileReader","target","files","length","filename","onload","event","csvData","PapaParse","parse","result","header","innerText","changeRate","data","setData","readAsText","setState","fileData","pushData","state","undefined","createRef","textAlign","lineHeight","marginTop","color","flexDirection","justifyContent","border","fontSize","fontFamily","DetailsInputWithUnitJSX","value","onBlur","handleValueChange","unit","handleUnitChange","DetailsInputWithUnit","m2k","console","log","mpg2kml","g2l","convertedValue","addImage","AddDestination","onAdd","add","fontWeight","pointerEvents","gridStyle","gridGap","FuelOpDetailsJSX","hide","Location","handleLocationChange","inputData","via","stop","removeVia","addVia","optimizedRoute","FuelOpDetails","handlePriceList","pricelist","canada","push","splice","handleDirection","source","destination","offRoadDistance","tankCapacity","truckAverage","initFuel","fuelRateList","reserve","Map","showMarkerInfo","showMarker","directions","MapJSX","FuelOpMap","isMarkerShown","loadingElement","containerElement","mapElement","withGoogleMap","defaultOptions","styles","mapstyle","defaultZoom","defaultCenter","lat","lng","station","i","position","icon","url","brand","marker","marker_second","scaledSize","window","google","maps","Size","onCloseClick","site_id","Street","options","markerOptions","stops","polylineOptions","strokeColor","strokeOpacity","strokeWeight","featureType","elementType","stylers","lightness","weight","visibility","saturation","h1Style","RouteBoxer","R","box","range","grid_","latGrid_","lngGrid_","boxesX_","boxesY_","vertices","Array","Polyline","getPath","getLength","getAt","getVertexCount","j","getVertex","buildGrid_","findIntersectingCells_","mergeIntersectingCells_","routeBounds","LatLngBounds","extend","routeBoundsCenter","getCenter","rhumbDestinationPoint","getNorthEast","getSouthWest","unshift","hintXY","getCellCoords_","markCell_","gridXY","getGridCoordsFromHint_","Math","abs","getGridIntersects_","latlng","x","y","hintlatlng","hint","start","end","startXY","endXY","edgePoint","edgeXY","brng","rhumbBearingTo","getGridIntersect_","fillInGridSquares_","gridLineLat","d","toRad","cos","startx","endx","cell","currentBox","getCellBounds_","mergeBoxesY_","mergeBoxesX_","LatLng","dist","parseFloat","lat1","lon1","lat2","dLat","dPhi","tan","PI","q","dLon","sin","lon2","isNaN","toDeg","dest","atan2","toBrng","Number","nearByMarker","distance","containsMarker","routeBoxer","gmarkers","getMarkers","routes","overview_path","boxes","contains","getPosition","title","location","gmarker","gasStation","Marker","getMinCostRoute","currentFuel","totalDistance","numberOfStation","totalCost","nextCheapestStation","pop","gasNeeded","min","duration","cost_per_lit","gasFilled","price_for_gasFilled","ShowGasStation","opRoute","goback","ShowGasStationJSX","route","count","str","start_address","end_address","gs","total_cost","GasStation","StopDetails","RouteSummary","FuelOptimzationJSX","marginRight","FuelOptimzation","optimizingData","wayPoints","DirectionService","DirectionsService","wp","stopover","testDirection","origin","waypoints","travelMode","TravelMode","DRIVING","status","DirectionsStatus","OK","data_points","getDirection","od","priceList","Promise","reject","getDistance","then","res","legs","wps","getPriceList","setOpRoute","alert","destinations","split_destination","all","getSingleInstanceDistance","total_stops","rows","elements","text","catch","err","price_item","parseInt","trim","sort","a","b","distanceService","DistanceMatrixService","getDistanceMatrix","origins","flex","overflow","FuelOp","Root","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45f130e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.1fede408.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.81575bdf.svg\";","module.exports = __webpack_public_path__ + \"static/media/notification.ccc9981f.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar_user.ba60e818.jpg\";","var map = {\n\t\"./add.svg\": 99,\n\t\"./ar_pr.svg\": 177,\n\t\"./collapse.svg\": 178,\n\t\"./dashboard.svg\": 179,\n\t\"./database_maintenance.svg\": 180,\n\t\"./delete.svg\": 100,\n\t\"./dispatch_board.svg\": 181,\n\t\"./driver_payroll.svg\": 182,\n\t\"./ifta.svg\": 183,\n\t\"./logout.svg\": 184,\n\t\"./maintenance.svg\": 185,\n\t\"./marker.svg\": 42,\n\t\"./marker_second.svg\": 49,\n\t\"./order_entry.svg\": 186,\n\t\"./planner.svg\": 187,\n\t\"./purchase_order.svg\": 188,\n\t\"./quotation.svg\": 189,\n\t\"./setting.svg\": 190,\n\t\"./stops.svg\": 72,\n\t\"./taxes.svg\": 191,\n\t\"./vendor_management.svg\": 192\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 176;","module.exports = __webpack_public_path__ + \"static/media/ar_pr.0b9cd9d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/collapse.184dff3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.aa10a51e.svg\";","module.exports = __webpack_public_path__ + \"static/media/database_maintenance.8c5fcb0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/dispatch_board.c8c2d5b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/driver_payroll.1946eb31.svg\";","module.exports = __webpack_public_path__ + \"static/media/ifta.e2074b97.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.960a76b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/maintenance.3dfb6bff.svg\";","module.exports = __webpack_public_path__ + \"static/media/order_entry.db6aea9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/planner.e8497f4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/purchase_order.df2ad329.svg\";","module.exports = __webpack_public_path__ + \"static/media/quotation.839b295e.svg\";","module.exports = __webpack_public_path__ + \"static/media/setting.4e750a16.svg\";","module.exports = __webpack_public_path__ + \"static/media/taxes.a8a359f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/vendor_management.623cd46f.svg\";","// import the route events for navbar\n// import RouteEvents from './sidebar_renderer_events'\n\nconst archiveNav = [\n    {\n        label : 'Customers',\n        path : '/database-maintenance/customers'\n    },\n    {\n        label : 'Prospects',\n        path :  '/database-maintenance/prospects'\n    },\n    {\n        label : 'Shippers/Consignees',\n        path :  '/database-maintenance/shippers'\n    },\n    {\n        label : 'Outside Carriers',\n        path :  '/database-maintenance/outside-carriers'\n    },\n    {\n        label : 'Misc. Vendors',\n        path :  '/database-maintenance/misc-vendors'\n    },\n    {\n        label : 'Customs Broker',\n        path :  '/database-maintenance/customs-broker'\n    },\n    {\n        label : 'Standard Charges',\n        path :  '/database-maintenance/standard-charges'\n    },\n    {\n        label : 'Jurisdictions',\n        path :  '/database-maintenance/jurisdictions'\n    },\n    {\n        label : 'Resources',\n        path :  '/database-maintenance/resources'\n    },\n    {\n        label : 'Payroll Schedules',\n        path :  '/database-maintenance/payroll-schedules'\n    },\n    {\n        label : 'Standard Templates',\n        path :  '/database-maintenance/standard-templates'\n    },\n    {\n        label : 'Lists',\n        path :  '/database-maintenance/lists'\n    },\n    {\n        label : 'Comissions',\n        path :  '/database-maintenance/comissions'\n    },\n    {\n        label : 'Master Orders',\n        path :  '/database-maintenance/master-orders'\n    },\n    {\n        label : 'Travel Times',\n        path :  '/database-maintenance/travel-times'\n    }\n]\n\nconst nav_bar = [\n    {\n        LOGISITCS : [\n            {\n                label : 'Order Entry',\n                path : '/order-entry'\n            },\n            {\n                label : 'Planner',\n                path : '/'\n            },\n            {\n                label : 'Dispatch Board',\n                path:'/dispatch-board'\n            }\n        ]\n    },\n    {\n        ACCOUNTING : [\n            {\n                label : 'Taxes',\n                path : '/taxes'\n            },\n            {\n                label : 'IFTA',\n                path : '/ifta'\n            },\n            {\n                label : 'AR/PR',\n                path : '/ar-pr'\n            },\n            {\n                label : 'Driver Payroll',\n                path : '/driver-payroll'\n            }\n        ]\n    },\n    {\n        SERVICES : [\n            {\n                label : 'Purchase Order',\n                path : '/purchase-order'\n            },\n            {\n                label : 'Maintenance',\n                path : '/maintenance'\n            },\n            {\n                label : 'Quotation',\n                path : '/quotation'\n            },\n            {\n                label : 'Vendor Management',\n                path : '/vendor-management'\n            },\n            {\n                label : 'Database Maintenance',\n                path : '/database-maintenance/lists',\n                // event : RouteEvents['database_maintenance']\n            }\n        ]\n    }\n]\n\nexport {archiveNav, nav_bar};","import React from 'react';\nimport './sidebar.sass'\nimport {NavLink} from 'react-router-dom'\nimport {nav_bar} from './navbar_data';\n\n\n\nString.prototype.image_format = function(){\n    let arr = this.split('_')\n\n    arr = arr.map( item => item.replace(item.charAt(0), item.charAt(0).toUpperCase()))\n\n    return arr.join(' ')\n}\n\nfunction importAll(r) {\n\n    let image_name = r.keys().map(item => item.slice(2).split('.')[0]) // remove './' from the image name\n\n    image_name = image_name.map( item => {\n        if(item == 'ar_pr') {\n            return 'AR/PR'\n        }\n\n        if(item == 'ifta'){\n            return 'IFTA'\n        }\n\n        return item.image_format()\n    })\n\n    let hash_value = r.keys().map(r);\n\n    let image_obj = {}\n\n    image_name.map( (item, index) => {\n        image_obj[item] = hash_value[index]\n    })\n\n    return image_obj\n  }\n\nconst images = importAll(require.context('./../../static/icon/svg/', false, /\\.(png|jpe?g|svg)$/));\n\n\nconst SidebarJSX = () =>\n    <div className=\"sidebar\">\n        <div className=\"sidebar_logo sidebar_hide\">\n             <h1>Logo</h1>\n        </div>\n        <div className=\"sidebar_navs\">\n            <ul>\n                <li>\n                    <NavLink to=\"/dashboard\">\n                        <img src={images['Dashboard']}/><span className=\"sidebar_hide\">Dashboard</span>\n                    </NavLink>\n                </li>\n            </ul>\n            {\n                nav_bar.map( (item, index) =>\n                    <ul key={index}>\n                        <span className=\"nav_head sidebar_hide\"  >{Object.keys(item)[0]}</span>\n                        {\n                            item[Object.keys(item)[0]].map( (nested_item, nested_index) =>\n                                <li key={nested_index}>\n                                     {/* change this to navlinks */}\n                                    <NavLink  \n                                        activeClassName=\"active\" \n                                        to={`${nested_item.path}`}\n                                        activeStyle={{background:100}} \n                                    >\n\n                                        <img src={images[nested_item.label]}/>\n                                        <span className=\"sidebar_hide\">{nested_item.label}</span>\n                                    </NavLink>\n                                </li>\n                            )\n                        }\n                    </ul>\n                )\n            }\n\n            <ul className=\"more_options\">\n                <li id=\"collapse\">\n                    <img src={images[\"Collapse\"]} />\n                    <span className=\"sidebar_hide\">Collapse Panel</span>\n                </li>\n                <li className=\"base_options\">\n                    <NavLink to=\"/settings\">\n                        <img src={images[\"Setting\"]} />\n                        <span className=\"sidebar_hide\">Setting</span>\n                    </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/logout\">\n                        <img src={images[\"Logout\"]} />\n                        <span className=\"sidebar_hide\">Log Out</span>\n                    </NavLink>\n                </li>\n            </ul>\n\n        </div>\n    </div>\n\n\nclass Sidebar extends React.Component {\n    render(){\n        return(\n            <SidebarJSX />\n        )\n    }\n}\n\nexport default Sidebar;","import Sidebar from './sidebar';\n\n\nexport default Sidebar","import Header from './header';\n\nexport default Header","import React from 'react';\nimport './header.sass'\n\n// add images\n\nimport search from './../../static/icon/search.svg';\nimport notification from './../../static/icon/notification.svg';\nimport profile from '../../static/avatar_user.jpg';\n\n\n\nconst Header = () => \n    <div className=\"header\">\n        <div className=\"header-search\">\n            <img src={search}/>\n            <input placeholder=\"Search for lists name, tables and help...\" type=\"text\"/>\n        </div>\n\n        <div className=\"header-profile\">\n            <img src={profile}/>    \n            <div className=\"user-info\">\n                <p className=\"user-name\">Rohit Tatu</p>\n                <p className=\"user-role\">Database Administrator</p>\n            </div>\n        </div>\n\n        <img src={notification}/>\n\n    </div>\n\n\nexport default Header","import React from \"react\";\n\nconst stack = {\n  display: \"grid\",\n  gridTemplateColumns: \"1fr\",\n  width: \"100%\"\n};\n\nconst grid = {\n  display: \"grid\",\n  gridTemplateColumns: \"1fr 1fr\",\n  width: \"100%\",\n  boxSizing: 'border-box',\n}\n\nconst Stack = props => (\n  <div className=\"grid\" style={{ ...stack, ...props.style }}>\n    {props.children}\n  </div>\n);\n\nconst Grid = props => (\n  <div className=\"grid\" style={{ ...grid, ...props.style }}>\n    {props.children}\n  </div>\n);\n\nexport { Grid, Stack };\n","import React from \"react\";\nimport \"./geo.css\";\nimport Geosuggest from \"react-geosuggest\";\n\nclass LocationSearch extends React.Component {\n  onSuggestSelect = (val) => {\n    this.props.handleChange(val, this.props.name, this.props.index)\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div style={flexEnable}>\n          <label>{this.props.label}</label>\n          {\n            (this.props.onClose) ?\n              <img src={this.props.close} style={closeImage} onClick={() => this.props.onClose(this.props.index)} />\n              : null\n          }\n        </div>\n        <Geosuggest onSuggestSelect={this.onSuggestSelect} initialValue={this.props.initialValue} />\n      </div>\n    );\n  }\n}\n\nconst flexEnable = {\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: '5px'\n}\n\nconst closeImage = {\n  marginLeft: 'auto',\n  height: '10px',\n  cursor: 'pointer'\n}\n\nexport default LocationSearch;\n","import React from \"react\";\n\nimport PapaParse from \"papaparse\";\n\nconst UploadFieldJSX = props => (\n  <div style={uploadfieldstyle} id=\"file-drop-area\">\n    <p style={addfont} ref={props.fileName}>\n      click to choose to upload file\n    </p>\n    <div>\n      <input\n        type=\"file\"\n        id={props.usa ? \"fileElem_usa\" : \"fileElem\"}\n        style={{ display: \"none\" }}\n        onChange={props.handleChange}\n      />\n      <label style={button} htmlFor={props.usa ? \"fileElem_usa\" : \"fileElem\"}>\n        Choose File\n      </label>\n    </div>\n  </div>\n);\n\n\n\n\nclass UploadField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fileData: undefined\n    };\n\n    this.fileName = React.createRef();\n  }\n\n  handleFileUpload = (e) => {\n\n    let label = this.fileName.current;\n    let reader = new FileReader();\n    if (e.target.files.length > 0) {\n      const filename = e.target.files[0].name;\n\n      reader.onload = event => {\n        const csvData = PapaParse.parse(event.target.result, {\n          header: true\n        });\n\n        label.innerText = filename;\n        if(this.props.usa) {\n          this.changeRate(csvData.data)\n        }\n        this.setData(csvData.data);\n      };\n\n      reader.readAsText(e.target.files[0], \"UTF-8\");\n    }\n    \n  };\n\n  setData = data => {\n    this.setState({ fileData: data }, () => {\n      this.props.pushData(this.state.fileData, this.props.usa);\n    });\n  };\n\n  changeRate = (data) => {\n    data.map( item => {\n      item[\"Your Price\"] = ( item[\"Your Price\"] / 3.78541 ) * 1.32;\n    })\n  }\n  render() {\n    return (\n      <UploadFieldJSX\n        handleChange={this.handleFileUpload}\n        fileName={this.fileName}\n        usa={this.props.usa}\n      />\n    );\n  }\n}\n\n// styles\n\nconst button = {\n  width: \"100px\",\n  height: \"30px\",\n  textAlign: \"center\",\n  lineHeight: \"30px\",\n  marginTop: \"10px\",\n  background: \"rgba(80,125,240,0.2)\",\n  color: \"rgba(80,125,240,1)\",\n  cursor: \"pointer\"\n};\n\nconst uploadfieldstyle = {\n  height: \"100px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  border: \"1px dotted rgba(80,125,240,0.2)\"\n};\n\nconst addfont = {\n  fontSize: \"12px\",\n  fontFamily: \"Source Sans Pro\"\n};\n\nexport default UploadField;\n","import React from \"react\";\n\nconst DetailsInput = ({ label, name, value, handleChange, type = \"text\" }) => (\n  <div className=\"fo-input\">\n    <label style={{ marginBottom: \"5px\" }}>{label}</label>\n    <input\n      type={type}\n      name={name}\n      value={value}\n      onChange={e => handleChange(e, name)}\n    />\n  </div>\n);\n\nconst DetailsInputWithUnitJSX = props => (\n  <div className=\"fo-input-wrapper\">\n    <div className=\"fo-input\">\n      <label style={{ marginBottom: \"5px\" }}>{props.label}</label>\n      <input\n        type=\"number\"\n        name=\"value\"\n        value={props.value.value}\n        onChange={props.handleChange}\n        onBlur={props.handleValueChange}\n      />\n    </div>\n\n    <div>\n      <select value={props.value.unit} onChange={props.handleUnitChange}>\n        <option value={props.unit[0]}>{props.unit[0]}</option>\n        <option value={props.unit[1]}>{props.unit[1]}</option>\n      </select>\n    </div>\n  </div>\n);\n\nclass DetailsInputWithUnit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unit = [];\n\n    switch (this.props.unit) {\n      case \"AVERAGE\":\n        this.unit = [\"KM/L\", \"M/G\", this.mpg2kml];\n        break;\n\n      case \"DISTANCE\":\n        this.unit = [\"KM\", \"M\", this.m2k];\n        break;\n      default:\n        this.unit = [\"L\", \"G\", this.g2l];\n        break;\n    }\n\n    this.state = {\n      value: {\n        value: this.props.value,\n        unit: this.unit[0]\n      },\n      name: this.props.name\n    };\n  }\n\n  m2k = (val, unit) => console.log(val, unit) || (unit == \"KM\" ? val : val * 1.60934);\n\n  mpg2kml = (val, unit) => (unit == \"KM/L\" ? val : val * 0.43);\n\n  g2l = (val, unit) => (unit == \"L\" ? val : val * 3.78541);\n\n  handleUnitChange = e => {\n    let unit = e.target.value;\n    this.setState({ value: { ...this.state.value, unit } });\n  };\n\n  handleValueChange = e => {\n    let value = e.target.value;\n    let unit = this.state.value.unit;\n    let convertedValue = this.unit[2](value, unit);\n    console.log(convertedValue)\n    if(this.props.unit == \"DISTANCE\") {\n        convertedValue = convertedValue < 5 ? 5 : convertedValue\n    } else {\n        convertedValue = convertedValue < 0 ? 0 : convertedValue\n    }\n    this.setState({ value: { ...this.state.value, value : convertedValue } });\n  };\n\n  handleChange = e => {\n    let value = e.target.value;\n    this.setState({ value: { ...this.state.value, value  } });\n  }\n\n  render() {\n    return (\n      <DetailsInputWithUnitJSX\n        handleUnitChange={this.handleUnitChange}\n        handleValueChange={this.handleValueChange}\n        handleChange={this.handleChange}\n        value={this.state.value}\n        label={this.props.label}\n        unit={this.unit}\n      />\n    );\n  }\n}\n\nexport { DetailsInputWithUnit };\n\nexport default DetailsInput;\n","import React from 'react';\nimport add from \"../../static/icon/svg/add.svg\"\n\nconst AddDestination = (props) =>\n    <div style={flexEnable} onClick={props.onAdd}>\n        <img src={add} style={addImage} />\n        <label\n            style={{\n                color: '#507DF0',\n                fontWeight: '500',\n                marginLeft: '5px',\n                pointerEvents: 'none'\n            }}\n        >\n            Add Via Route\n        </label>\n    </div>\n\nconst flexEnable = {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '5px',\n    cursor: 'pointer'\n}\n\nconst addImage = {\n    height: '10px',\n    marginLeft: '5px'\n}\n\nexport default AddDestination","import React from \"react\";\nimport \"./details.sass\";\nimport { Stack, Grid } from \"../General/Grid\";\nimport LocationSearch from \"./Location\";\nimport UploadField from \"../General/FileUpload\";\nimport DetailsInput, { DetailsInputWithUnit } from \"./DetailsInput\";\nimport close from \"../../static/icon/svg/delete.svg\";\nimport AddDestination from \"./addDest\";\n\nconst gridStyle = {\n  gridGap: \"10px\"\n};\n\nconst FuelOpDetailsJSX = props => (\n  <div className=\"fo-details\" style={{display : props.hide ? \"none\" : \"block\"}}>\n    <Stack style={gridStyle}>\n      {/* places */}\n      <Stack style={{ gridGap: \"10px\", marginBottom: \"20px\" }}>\n        <LocationSearch\n          label=\"Source\"\n          name=\"source\"\n          handleChange={props.handleLocationChange}\n          initialValue={props.inputData[\"source\"][\"label\"]}\n        />\n        {props.inputData.via.map((stop, index) => (\n          <LocationSearch\n            key={index}\n            label=\"Via\"\n            close={close}\n            index={index}\n            onClose={props.removeVia}\n            handleChange={props.handleLocationChange}\n            name=\"via\"\n            initialValue={props.inputData[\"via\"][index][\"label\"]}\n          />\n        ))}\n        <LocationSearch\n          label=\"Destination\"\n          name=\"destination\"\n          handleChange={props.handleLocationChange}\n          initialValue={props.inputData[\"destination\"][\"label\"]}\n        />\n        <AddDestination onAdd={props.addVia} />\n      </Stack>\n\n      {/* input details */}\n      <Grid style={gridStyle}>\n        <DetailsInputWithUnit\n          label=\"OffRoad Distance\"\n          name=\"offRoadDistance\"\n          type=\"number\"\n          unit={\"DISTANCE\"}\n          value={props.inputData[\"offRoadDistance\"]}\n          handleChange={props.handleChange}\n        />\n\n        <DetailsInputWithUnit\n          label=\"Fuel Tank Capacity\"\n          name=\"tankCapacity\"\n          type=\"number\"\n          value={props.inputData[\"tankCapacity\"]}\n          handleChange={props.handleChange}\n        />\n        <DetailsInputWithUnit\n          label=\"Truck Average\"\n          name=\"truckAverage\"\n          type=\"number\"\n          value={props.inputData[\"truckAverage\"]}\n          handleChange={props.handleChange}\n          unit={\"AVERAGE\"}\n        />\n        <DetailsInputWithUnit\n          label=\"Initial Fuel\"\n          name=\"initFuel\"\n          type=\"number\"\n          value={props.inputData[\"initFuel\"]}\n          handleChange={props.handleChange}\n        />\n        <DetailsInputWithUnit\n          label=\"Reserve\"\n          name=\"reserve\"\n          type=\"number\"\n          value={props.inputData[\"reserve\"]}\n          handleChange={props.handleChange}\n        />\n      </Grid>\n\n      {/* gas statation data */}\n\n      <div>\n        <label style={{ marginBottom: \"5px\" }}>Canada Gas Station Price List</label>\n        <UploadField pushData={props.pushData} />\n      </div>\n      <div>\n        <label style={{ marginBottom: \"5px\" }}>US Gas Station Price List</label>\n        <UploadField pushData={props.pushData} usa={true}/>\n      </div>\n    </Stack>\n    <div className=\"fuel-op-button\">\n      <button className=\"optimize-route\" onClick={props.optimizedRoute}>\n        Optimize Route\n      </button>\n    </div>\n  </div>\n);\n\nclass FuelOpDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: \"\",\n      destination: \"\",\n      via: [],\n      offRoadDistance: \"5\",\n      tankCapacity: \"1000\",\n      truckAverage: \"4\",\n      initFuel: \"100\",\n      fuelRateList: \"\",\n      reserve: \"\",\n      pricelist: [],\n      usa: \"\",\n      canada: \"\",\n    };\n  }\n\n  /**\n   * two function for `updating the function cause\n   * location component doesnt need event arg\n   */\n  handleLocationChange = (val, name, index) => {\n    // index in case of via\n    if (name == \"via\" && index != undefined && index != null) {\n      let via = [...this.state.via];\n      via[index] = val ? val : \"\";\n      this.setState({ via });\n    } else {\n      this.setState({ [name]: val ? val : \"\" });\n    }\n  };\n\n  handlePriceList = (data, usa) => {\n    if(usa) {\n      this.setState({usa : data}, () => {\n        let pricelist = [...this.state.usa, ...this.state.canada];\n        this.setState({pricelist}, () => console.log(this.state));\n      })\n    } else {\n      this.setState({canada : data}, () => {\n        let pricelist = [...this.state.usa, ...this.state.canada];\n        this.setState({pricelist}, () => console.log(this.state));\n      })\n    }\n  };\n\n  // update state for rest of the component\n  handleChange = (e, name) => {\n    let val = e.target.value;\n    // validations\n    /**\n     * 1. value can not be less than zero\n     * 2. offRoad Distance can not be less than zero otherwise algorithm will crash\n     */\n    if (val < 0) {\n      return 0;\n    }\n\n    if (name == \"offRoadDistance\" && val < 5) {\n      return 0;\n    }\n\n    this.setState({ [name]: val });\n  };\n\n  // add via route\n  addVia = () => {\n    let via = [...this.state.via];\n    via.push(\"\");\n    this.setState({ via });\n  };\n\n  // remove via route\n  removeVia = index => {\n    let via = [...this.state.via];\n\n    via.splice(index, 1);\n\n    this.setState({ via });\n  };\n\n  // optimized route function\n\n  optimizedRoute = () => {\n    this.props.handleDirection({ ...this.state });\n  };\n\n  render() {\n    return (\n      <FuelOpDetailsJSX\n        addVia={this.addVia}\n        removeVia={this.removeVia}\n        inputData={{ ...this.state }}\n        handleLocationChange={this.handleLocationChange}\n        handleChange={this.handleChange}\n        optimizedRoute={this.optimizedRoute}\n        pushData={this.handlePriceList}\n        hide={this.props.hide}\n      />\n    );\n  }\n}\n\nexport default FuelOpDetails;\n","import React from \"react\";\nimport \"./map.sass\";\nimport marker from \"../../static/icon/svg/marker.svg\";\nimport stops from \"../../static/icon/svg/stops.svg\";\nimport marker_second from \"../../static/icon/svg/marker_second.svg\";\nimport {\n  GoogleMap,\n  Marker,\n  withGoogleMap,\n  DirectionsRenderer,\n  InfoWindow,\n} from \"react-google-maps\";\n\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMarker: \"\"\n    };\n  }\n\n  showMarkerInfo = val => {\n    // show marker info\n    if (this.state.showMarkerInfo == val) {\n      this.setState({ showMarker: \"\" });\n    } else {\n      this.setState({ showMarker: val });\n    }\n  };\n\n  render() {\n    return (\n      <MapJSX\n        data={this.props.data}\n        showMarkerInfo={this.showMarkerInfo}\n        showMarker={this.state.showMarker}\n        directions={this.props.directions}\n      />\n    );\n  }\n}\n\nconst MapJSX = props => (\n  <div className=\"fuelOp-map\">\n    <FuelOpMap\n      isMarkerShown\n      loadingElement={<div style={{ height: `100%` }} />}\n      containerElement={<div style={{ height: `100%` }} />}\n      mapElement={<div style={{ height: `100%` }} />}\n      data={props.data}\n      showMarkerInfo={props.showMarkerInfo}\n      showMarker={props.showMarker}\n      directions={props.directions}\n    />\n  </div>\n);\n\nconst FuelOpMap = withGoogleMap(props => ( \n  <GoogleMap\n    defaultOptions={{ styles: mapstyle }}\n    defaultZoom={8}\n    defaultCenter={{ lat: 43.6532, lng: -79.3832 }}\n  >\n    {props.isMarkerShown &&\n      props.data &&\n      Object.keys(props.data).map(item =>\n        props.data[item].map((station, i) => (\n          <Marker\n            position={{ lat: station.lat, lng: station.lng }}\n            icon={{\n              url: station.brand == \"LOVES\" ? marker : marker_second,\n              scaledSize: new window.google.maps.Size(15, 15)\n            }}\n            key={i}\n            onClick={() => props.showMarkerInfo(`${item}${i}`)}\n          >\n            {props.showMarker == `${item}${i}` && (\n              <InfoWindow onCloseClick={() => props.showMarkerInfo(i)}>\n                <p>\n                  <b>Site Id</b> : {`${station.site_id}`} <br />\n                  <b>Address</b> : {`${station.Street}`} <br />\n                </p>\n              </InfoWindow>\n            )}\n          </Marker>\n        ))\n      )}\n\n    {props.directions && (\n      <DirectionsRenderer\n        directions={props.directions}\n        options={{\n          markerOptions: {\n            icon: {\n              url: stops,\n              scaledSize: new window.google.maps.Size(25, 25),\n              label: \"A\"\n            }\n          },\n          polylineOptions: {\n            strokeColor: \"#507DF0\", // string - all css colr\n            strokeOpacity: 0.6, // number - 0.0 - 1.0\n            strokeWeight: 4 // number - stroke width in pixels\n          }\n        }}\n      />\n    )}\n  </GoogleMap>\n));\n\nconst mapstyle = [\n  {\n    featureType: \"water\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        lightness: 17\n      }\n    ]\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#f5f5f5\"\n      },\n      {\n        lightness: 20\n      }\n    ]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        lightness: 17\n      }\n    ]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        lightness: 29\n      },\n      {\n        weight: 0.2\n      }\n    ]\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        lightness: 18\n      }\n    ]\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#ffffff\"\n      },\n      {\n        lightness: 16\n      }\n    ]\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#f5f5f5\"\n      },\n      {\n        lightness: 21\n      }\n    ]\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#dedede\"\n      },\n      {\n        lightness: 21\n      }\n    ]\n  },\n  {\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        visibility: \"off\"\n      },\n      {\n        color: \"#ffffff\"\n      },\n      {\n        lightness: 16\n      }\n    ]\n  },\n  {\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        saturation: 36\n      },\n      {\n        color: \"#333333\"\n      },\n      {\n        lightness: 40\n      }\n    ]\n  },\n  {\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"on\"\n      }\n    ]\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#f2f2f2\"\n      },\n      {\n        lightness: 19\n      }\n    ]\n  },\n  {\n    featureType: \"administrative\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#fefefe\"\n      },\n      {\n        lightness: 20\n      }\n    ]\n  },\n  {\n    featureType: \"administrative\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        color: \"#fefefe\"\n      },\n      {\n        lightness: 17\n      },\n      {\n        weight: 1.2\n      }\n    ]\n  }\n];\n\nexport default Map;\n","import React from 'react';\n\nconst h1Style = {\n  fontSize: '21px',\n  fontFamily: \"Source Sans Pro\",\n  fontWeight: 600,\n  color: '#131D4A'\n}\n\nconst Header = ({label, style}) => (\n  <div style={style}>\n    <h1 style={h1Style}>{label}</h1>\n  </div>\n);\n\nexport { Header };\n","/**\n * @name RouteBoxer\n * @version 1.0\n * @copyright (c) 2010 Google Inc.\n * @author Thor Mitchell\n *\n * @fileoverview The RouteBoxer class takes a path, such as the Polyline for a\n * route generated by a Directions request, and generates a set of LatLngBounds\n * objects that are guaranteed to contain every point within a given distance\n * of that route. These LatLngBounds objects can then be used to generate\n * requests to spatial search services that support bounds filtering (such as\n * the Google Maps Data API) in order to implement search along a route.\n * <br/><br/>\n * RouteBoxer overlays a grid of the specified size on the route, identifies\n * every grid cell that the route passes through, and generates a set of bounds\n * that cover all of these cells, and their nearest neighbours. Consequently\n * the bounds returned will extend up to ~3x the specified distance from the\n * route in places.\n */\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License. \n */\n\n/**\n * Creates a new RouteBoxer\n *\n * @constructor\n */\nfunction RouteBoxer() {\n  this.R = 6371; // earth's mean radius in km\n}\n\n/**\n * Generates boxes for a given route and distance\n *\n * @param {window.google.maps.LatLng[] | window.google.maps.Polyline} path The path along\n *           which to create boxes. The path object can be either an Array of\n *           window.google.maps.LatLng objects or a Maps API v2 or Maps API v3\n *           window.google.maps.Polyline object.\n * @param {Number} range The distance in kms around the route that the generated\n *           boxes must cover.\n * @return {window.google.maps.LatLngBounds[]} An array of boxes that covers the whole\n *           path.\n */\nRouteBoxer.prototype.box = function (path, range) {\n  // Two dimensional array representing the cells in the grid overlaid on the path\n  this.grid_ = null;\n  \n  // Array that holds the latitude coordinate of each vertical grid line\n  this.latGrid_ = [];\n  \n  // Array that holds the longitude coordinate of each horizontal grid line  \n  this.lngGrid_ = [];\n  \n  // Array of bounds that cover the whole route formed by merging cells that\n  //  the route intersects first horizontally, and then vertically\n  this.boxesX_ = [];\n\n  // Array of bounds that cover the whole route formed by merging cells that\n  //  the route intersects first vertically, and then horizontally\n  this.boxesY_ = [];\n  \n  // The array of LatLngs representing the vertices of the path\n  var vertices = null;\n\n  // If necessary convert the path into an array of LatLng objects\n  if (path instanceof Array) {\n    // already an arry of LatLngs (eg. v3 overview_path)\n    vertices = path;\n  } else if (path instanceof window.google.maps.Polyline) {\n    if (path.getPath) {\n      // v3 Maps API Polyline object\n      vertices = new Array(path.getPath().getLength());\n      for (var i = 0; i < vertices.length; i++) {\n        vertices[i] = path.getPath().getAt(i);\n      }\n    } else {\n      // v2 Maps API Polyline object\n      vertices = new Array(path.getVertexCount());\n      for (var j = 0; j < vertices.length; j++) {\n        vertices[j] = path.getVertex(j);\n      }\n    }\n  }\n\n\n  // Build the grid that is overlaid on the route\n  this.buildGrid_(vertices, range);\n  \n  // Identify the grid cells that the route intersects\n  this.findIntersectingCells_(vertices);\n  \n  // Merge adjacent intersected grid cells (and their neighbours) into two sets\n  //  of bounds, both of which cover them completely\n  this.mergeIntersectingCells_();\n\n  // Return the set of merged bounds that has the fewest elements\n  return (this.boxesX_.length <= this.boxesY_.length ?\n          this.boxesX_ :\n          this.boxesY_);\n};\n\n/**\n * Generates boxes for a given route and distance\n *\n * @param {LatLng[]} vertices The vertices of the path over which to lay the grid\n * @param {Number} range The spacing of the grid cells.\n */\nRouteBoxer.prototype.buildGrid_ = function (vertices, range) {\n\n  // Create a LatLngBounds object that contains the whole path\n  var routeBounds = new window.google.maps.LatLngBounds();\n  for (var i = 0; i < vertices.length; i++) {\n    routeBounds.extend(vertices[i]);\n  }\n\n  \n  // Find the center of the bounding box of the path\n  var routeBoundsCenter = routeBounds.getCenter();\n  \n  // Starting from the center define grid lines outwards vertically until they\n  //  extend beyond the edge of the bounding box by more than one cell\n  this.latGrid_.push(routeBoundsCenter.lat());\n  \n  // Add lines from the center out to the north\n  this.latGrid_.push(routeBoundsCenter.rhumbDestinationPoint(0, range).lat());\n  for (i = 2; this.latGrid_[i - 2] < routeBounds.getNorthEast().lat(); i++) {\n    this.latGrid_.push(routeBoundsCenter.rhumbDestinationPoint(0, range * i).lat());\n  }\n\n  // Add lines from the center out to the south  \n  for (i = 1; this.latGrid_[1] > routeBounds.getSouthWest().lat(); i++) {\n    this.latGrid_.unshift(routeBoundsCenter.rhumbDestinationPoint(180, range * i).lat());\n  }\n\n  // Starting from the center define grid lines outwards horizontally until they\n  //  extend beyond the edge of the bounding box by more than one cell  \n  this.lngGrid_.push(routeBoundsCenter.lng());\n  \n  // Add lines from the center out to the east\n  this.lngGrid_.push(routeBoundsCenter.rhumbDestinationPoint(90, range).lng());\n  for (i = 2; this.lngGrid_[i - 2] < routeBounds.getNorthEast().lng(); i++) {\n    this.lngGrid_.push(routeBoundsCenter.rhumbDestinationPoint(90, range * i).lng());\n  }\n  \n  // Add lines from the center out to the west\n  for (i = 1; this.lngGrid_[1] > routeBounds.getSouthWest().lng(); i++) {\n    this.lngGrid_.unshift(routeBoundsCenter.rhumbDestinationPoint(270, range * i).lng());\n  }\n  \n  // Create a two dimensional array representing this grid\n  this.grid_ = new Array(this.lngGrid_.length);\n  for (i = 0; i < this.grid_.length; i++) {\n    this.grid_[i] = new Array(this.latGrid_.length);\n  }\n};\n\n/**\n * Find all of the cells in the overlaid grid that the path intersects\n *\n * @param {LatLng[]} vertices The vertices of the path\n */\nRouteBoxer.prototype.findIntersectingCells_ = function (vertices) {\n  // Find the cell where the path begins\n  var hintXY = this.getCellCoords_(vertices[0]);\n  \n  // Mark that cell and it's neighbours for inclusion in the boxes\n  this.markCell_(hintXY);\n\n  // Work through each vertex on the path identifying which grid cell it is in\n  for (var i = 1; i < vertices.length; i++) {\n    // Use the known cell of the previous vertex to help find the cell of this vertex\n    var gridXY = this.getGridCoordsFromHint_(vertices[i], vertices[i - 1], hintXY);\n    \n    if (gridXY[0] === hintXY[0] && gridXY[1] === hintXY[1]) {\n      // This vertex is in the same cell as the previous vertex\n      // The cell will already have been marked for inclusion in the boxes\n      continue;\n    \n    } else if ((Math.abs(hintXY[0] - gridXY[0]) === 1 && hintXY[1] === gridXY[1]) ||\n        (hintXY[0] === gridXY[0] && Math.abs(hintXY[1] - gridXY[1]) === 1)) {\n      // This vertex is in a cell that shares an edge with the previous cell\n      // Mark this cell and it's neighbours for inclusion in the boxes\n      this.markCell_(gridXY);\n      \n    } else {\n      // This vertex is in a cell that does not share an edge with the previous\n      //  cell. This means that the path passes through other cells between\n      //  this vertex and the previous vertex, and we must determine which cells\n      //  it passes through\n      this.getGridIntersects_(vertices[i - 1], vertices[i], hintXY, gridXY);\n    }\n    \n    // Use this cell to find and compare with the next one\n    hintXY = gridXY;\n  }\n};\n\n/**\n * Find the cell a path vertex is in by brute force iteration over the grid\n *\n * @param {LatLng[]} latlng The latlng of the vertex\n * @return {Number[][]} The cell coordinates of this vertex in the grid\n */ \nRouteBoxer.prototype.getCellCoords_ = function (latlng) {\n  for (var x = 0; this.lngGrid_[x] < latlng.lng(); x++) {}\n  for (var y = 0; this.latGrid_[y] < latlng.lat(); y++) {}\n  return ([x - 1, y - 1]);\n};\n\n/**\n * Find the cell a path vertex is in based on the known location of a nearby\n *  vertex. This saves searching the whole grid when working through vertices\n *  on the polyline that are likely to be in close proximity to each other.\n *\n * @param {LatLng[]} latlng The latlng of the vertex to locate in the grid\n * @param {LatLng[]} hintlatlng The latlng of the vertex with a known location\n * @param {Number[]} hint The cell containing the vertex with a known location\n * @return {Number[]} The cell coordinates of the vertex to locate in the grid\n */ \nRouteBoxer.prototype.getGridCoordsFromHint_ = function (latlng, hintlatlng, hint) {\n  var x, y;\n  if (latlng.lng() > hintlatlng.lng()) {\n    for (x = hint[0]; this.lngGrid_[x + 1] < latlng.lng(); x++) {}\n  } else {\n    for (x = hint[0]; this.lngGrid_[x] > latlng.lng(); x--) {}\n  }\n  \n  if (latlng.lat() > hintlatlng.lat()) {\n    for (y = hint[1]; this.latGrid_[y + 1] < latlng.lat(); y++) {}\n  } else {        \n    for (y = hint[1]; this.latGrid_[y] > latlng.lat(); y--) {}\n  }\n  \n  return ([x, y]);\n};\n\n\n/**\n * Identify the grid squares that a path segment between two vertices\n * intersects with by:\n * 1. Finding the bearing between the start and end of the segment\n * 2. Using the delta between the lat of the start and the lat of each\n *    latGrid boundary to find the distance to each latGrid boundary\n * 3. Finding the lng of the intersection of the line with each latGrid\n *     boundary using the distance to the intersection and bearing of the line\n * 4. Determining the x-coord on the grid of the point of intersection\n * 5. Filling in all squares between the x-coord of the previous intersection\n *     (or start) and the current one (or end) at the current y coordinate,\n *     which is known for the grid line being intersected\n *     \n * @param {LatLng} start The latlng of the vertex at the start of the segment\n * @param {LatLng} end The latlng of the vertex at the end of the segment\n * @param {Number[]} startXY The cell containing the start vertex\n * @param {Number[]} endXY The cell containing the vend vertex\n */ \nRouteBoxer.prototype.getGridIntersects_ = function (start, end, startXY, endXY) {\n  var edgePoint, edgeXY, i;\n  var brng = start.rhumbBearingTo(end);         // Step 1.\n  \n  var hint = start;\n  var hintXY = startXY;\n  \n  // Handle a line segment that travels south first\n  if (end.lat() > start.lat()) {\n    // Iterate over the east to west grid lines between the start and end cells\n    for (i = startXY[1] + 1; i <= endXY[1]; i++) {\n      // Find the latlng of the point where the path segment intersects with\n      //  this grid line (Step 2 & 3)\n      edgePoint = this.getGridIntersect_(start, brng, this.latGrid_[i]);\n      \n      // Find the cell containing this intersect point (Step 4)\n      edgeXY = this.getGridCoordsFromHint_(edgePoint, hint, hintXY);\n      \n      // Mark every cell the path has crossed between this grid and the start,\n      //   or the previous east to west grid line it crossed (Step 5)\n      this.fillInGridSquares_(hintXY[0], edgeXY[0], i - 1);\n      \n      // Use the point where it crossed this grid line as the reference for the\n      //  next iteration\n      hint = edgePoint;\n      hintXY = edgeXY;\n    }\n    \n    // Mark every cell the path has crossed between the last east to west grid\n    //  line it crossed and the end (Step 5)\n    this.fillInGridSquares_(hintXY[0], endXY[0], i - 1);\n    \n  } else {\n    // Iterate over the east to west grid lines between the start and end cells\n    for (i = startXY[1]; i > endXY[1]; i--) {\n      // Find the latlng of the point where the path segment intersects with\n      //  this grid line (Step 2 & 3)\n      edgePoint = this.getGridIntersect_(start, brng, this.latGrid_[i]);\n      \n      // Find the cell containing this intersect point (Step 4)\n      edgeXY = this.getGridCoordsFromHint_(edgePoint, hint, hintXY);\n\n      // Mark every cell the path has crossed between this grid and the start,\n      //   or the previous east to west grid line it crossed (Step 5)\n      this.fillInGridSquares_(hintXY[0], edgeXY[0], i);\n\n      // Use the point where it crossed this grid line as the reference for the\n      //  next iteration\n      hint = edgePoint;\n      hintXY = edgeXY;\n    }\n    \n    // Mark every cell the path has crossed between the last east to west grid\n    //  line it crossed and the end (Step 5)\n    this.fillInGridSquares_(hintXY[0], endXY[0], i);\n    \n  }\n};\n\n/**\n * Find the latlng at which a path segment intersects with a given\n *   line of latitude\n *     \n * @param {LatLng} start The vertex at the start of the path segment\n * @param {Number} brng The bearing of the line from start to end\n * @param {Number} gridLineLat The latitude of the grid line being intersected\n * @return {LatLng} The latlng of the point where the path segment intersects\n *                    the grid line\n */ \nRouteBoxer.prototype.getGridIntersect_ = function (start, brng, gridLineLat) {\n  var d = this.R * ((gridLineLat.toRad() - start.lat().toRad()) / Math.cos(brng.toRad()));\n  return start.rhumbDestinationPoint(brng, d);\n};\n\n/**\n * Mark all cells in a given row of the grid that lie between two columns\n *   for inclusion in the boxes\n *     \n * @param {Number} startx The first column to include\n * @param {Number} endx The last column to include\n * @param {Number} y The row of the cells to include\n */ \nRouteBoxer.prototype.fillInGridSquares_ = function (startx, endx, y) {\n  var x;\n  if (startx < endx) {\n    for (x = startx; x <= endx; x++) {\n      this.markCell_([x, y]);\n    }\n  } else {\n    for (x = startx; x >= endx; x--) {\n      this.markCell_([x, y]);\n    }            \n  }      \n};\n\n/**\n * Mark a cell and the 8 immediate neighbours for inclusion in the boxes\n *     \n * @param {Number[]} square The cell to mark\n */ \nRouteBoxer.prototype.markCell_ = function (cell) {\n  var x = cell[0];\n  var y = cell[1];\n  this.grid_[x - 1][y - 1] = 1;\n  this.grid_[x][y - 1] = 1;\n  this.grid_[x + 1][y - 1] = 1;\n  this.grid_[x - 1][y] = 1;\n  this.grid_[x][y] = 1;\n  this.grid_[x + 1][y] = 1;\n  this.grid_[x - 1][y + 1] = 1;\n  this.grid_[x][y + 1] = 1;\n  this.grid_[x + 1][y + 1] = 1;\n};\n\n/**\n * Create two sets of bounding boxes, both of which cover all of the cells that\n *   have been marked for inclusion.\n *\n * The first set is created by combining adjacent cells in the same column into\n *   a set of vertical rectangular boxes, and then combining boxes of the same\n *   height that are adjacent horizontally.\n *\n * The second set is created by combining adjacent cells in the same row into\n *   a set of horizontal rectangular boxes, and then combining boxes of the same\n *   width that are adjacent vertically.\n *     \n */ \nRouteBoxer.prototype.mergeIntersectingCells_ = function () {\n  var x, y, box;\n  \n  // The box we are currently expanding with new cells\n  var currentBox = null;\n  \n  // Traverse the grid a row at a time\n  for (y = 0; y < this.grid_[0].length; y++) {\n    for (x = 0; x < this.grid_.length; x++) {\n      \n      if (this.grid_[x][y]) {\n        // This cell is marked for inclusion. If the previous cell in this\n        //   row was also marked for inclusion, merge this cell into it's box.\n        // Otherwise start a new box.\n        box = this.getCellBounds_([x, y]);\n        if (currentBox) {\n          currentBox.extend(box.getNorthEast());\n        } else {\n          currentBox = box;\n\n        }\n        \n      } else {\n        // This cell is not marked for inclusion. If the previous cell was\n        //  marked for inclusion, merge it's box with a box that spans the same\n        //  columns from the row below if possible.\n        this.mergeBoxesY_(currentBox);\n        currentBox = null;\n      }\n    }\n    // If the last cell was marked for inclusion, merge it's box with a matching\n    //  box from the row below if possible.\n    this.mergeBoxesY_(currentBox);\n    currentBox = null;\n  }\n\n  // Traverse the grid a column at a time\n  for (x = 0; x < this.grid_.length; x++) {\n    for (y = 0; y < this.grid_[0].length; y++) {\n      if (this.grid_[x][y]) {\n        \n        // This cell is marked for inclusion. If the previous cell in this\n        //   column was also marked for inclusion, merge this cell into it's box.\n        // Otherwise start a new box.\n        if (currentBox) {\n          box = this.getCellBounds_([x, y]);\n          currentBox.extend(box.getNorthEast());\n        } else {\n          currentBox = this.getCellBounds_([x, y]);\n        }\n        \n      } else {\n        // This cell is not marked for inclusion. If the previous cell was\n        //  marked for inclusion, merge it's box with a box that spans the same\n        //  rows from the column to the left if possible.\n        this.mergeBoxesX_(currentBox);\n        currentBox = null;\n        \n      }\n    }\n    // If the last cell was marked for inclusion, merge it's box with a matching\n    //  box from the column to the left if possible.\n    this.mergeBoxesX_(currentBox);\n    currentBox = null;\n  }\n};\n\n/**\n * Search for an existing box in an adjacent row to the given box that spans the\n * same set of columns and if one is found merge the given box into it. If one\n * is not found, append this box to the list of existing boxes.\n *\n * @param {LatLngBounds}  The box to merge\n */ \nRouteBoxer.prototype.mergeBoxesX_ = function (box) {\n  if (box !== null) {\n    for (var i = 0; i < this.boxesX_.length; i++) {\n      if (this.boxesX_[i].getNorthEast().lng() === box.getSouthWest().lng() &&\n          this.boxesX_[i].getSouthWest().lat() === box.getSouthWest().lat() &&\n          this.boxesX_[i].getNorthEast().lat() === box.getNorthEast().lat()) {\n        this.boxesX_[i].extend(box.getNorthEast());\n        return;\n      }\n    }\n    this.boxesX_.push(box);\n  }\n};\n\n/**\n * Search for an existing box in an adjacent column to the given box that spans\n * the same set of rows and if one is found merge the given box into it. If one\n * is not found, append this box to the list of existing boxes.\n *\n * @param {LatLngBounds}  The box to merge\n */ \nRouteBoxer.prototype.mergeBoxesY_ = function (box) {\n  if (box !== null) {\n    for (var i = 0; i < this.boxesY_.length; i++) {\n      if (this.boxesY_[i].getNorthEast().lat() === box.getSouthWest().lat() &&\n          this.boxesY_[i].getSouthWest().lng() === box.getSouthWest().lng() &&\n          this.boxesY_[i].getNorthEast().lng() === box.getNorthEast().lng()) {\n        this.boxesY_[i].extend(box.getNorthEast());\n        return;\n      }\n    }\n    this.boxesY_.push(box);\n  }\n};\n\n/**\n * Obtain the LatLng of the origin of a cell on the grid\n *\n * @param {Number[]} cell The cell to lookup.\n * @return {LatLng} The latlng of the origin of the cell.\n */ \nRouteBoxer.prototype.getCellBounds_ = function (cell) {\n  return new window.google.maps.LatLngBounds(\n    new window.google.maps.LatLng(this.latGrid_[cell[1]], this.lngGrid_[cell[0]]),\n    new window.google.maps.LatLng(this.latGrid_[cell[1] + 1], this.lngGrid_[cell[0] + 1]));\n};\n\n/* Based on the Latitude/longitude spherical geodesy formulae & scripts\n   at http://www.movable-type.co.uk/scripts/latlong.html\n   (c) Chris Veness 2002-2010\n*/ \nwindow.google.maps.LatLng.prototype.rhumbDestinationPoint = function (brng, dist) {\n  var R = 6371; // earth's mean radius in km\n  var d = parseFloat(dist) / R;  // d = angular distance covered on earth's surface\n  var lat1 = this.lat().toRad(), lon1 = this.lng().toRad();\n  brng = brng.toRad();\n\n  var lat2 = lat1 + d * Math.cos(brng);\n  var dLat = lat2 - lat1;\n  var dPhi = Math.log(Math.tan(lat2 / 2 + Math.PI / 4) / Math.tan(lat1 / 2 + Math.PI / 4));\n  var q = (Math.abs(dLat) > 1e-10) ? dLat / dPhi : Math.cos(lat1);\n  var dLon = d * Math.sin(brng) / q;\n  // check for going past the pole\n  if (Math.abs(lat2) > Math.PI / 2) {\n    lat2 = lat2 > 0 ? Math.PI - lat2 : - (Math.PI - lat2);\n  }\n  var lon2 = (lon1 + dLon + Math.PI) % (2 * Math.PI) - Math.PI;\n \n  if (isNaN(lat2) || isNaN(lon2)) {\n    return null;\n  }\n  return new window.google.maps.LatLng(lat2.toDeg(), lon2.toDeg());\n};\n\nwindow.google.maps.LatLng.prototype.rhumbBearingTo = function (dest) {\n  var dLon = (dest.lng() - this.lng()).toRad();\n  var dPhi = Math.log(Math.tan(dest.lat().toRad() / 2 + Math.PI / 4) / Math.tan(this.lat().toRad() / 2 + Math.PI / 4));\n  if (Math.abs(dLon) > Math.PI) {\n    dLon = dLon > 0 ? -(2 * Math.PI - dLon) : (2 * Math.PI + dLon);\n  }\n  return Math.atan2(dLon, dPhi).toBrng();\n};\n\n/**\n * Extend the Number object to convert degrees to radians\n *\n * @return {Number} Bearing in radians\n * @ignore\n */ \nNumber.prototype.toRad = function () {\n  return this * Math.PI / 180;\n};\n\n/**\n * Extend the Number object to convert radians to degrees\n *\n * @return {Number} Bearing in degrees\n * @ignore\n */ \nNumber.prototype.toDeg = function () {\n  return this * 180 / Math.PI;\n};\n\n/**\n * Normalize a heading in degrees to between 0 and +360\n *\n * @return {Number} Return \n * @ignore\n */ \nNumber.prototype.toBrng = function () {\n  return (this.toDeg() + 360) % 360;\n};\n\nexport default RouteBoxer;","import RouteBoxer from \"./RouterBox\";\nimport data from \"./../../static/jsonFuel.json\";\n\nexport default function nearByMarker(distance, directions) {\n\n  let containsMarker = [];\n\n  let routeBoxer = new RouteBoxer();\n\n  let gmarkers = getMarkers(data);\n  \n  let path = directions.routes[0].overview_path;\n\n  let boxes = routeBoxer.box(path, distance);\n\n  for (let i = 0; i < boxes.length; i++) {\n    for (let j = 0; j < gmarkers.length; j++) {\n      if (boxes[i].contains(gmarkers[j].getPosition())) {\n        containsMarker.push({\n          lat: gmarkers[j].getPosition().lat(),\n          lng: gmarkers[j].getPosition().lng(),\n          Street: gmarkers[j].Street,\n          site_id: gmarkers[j].site_id,\n          brand: gmarkers[j].title\n        });\n      }\n    }\n  }\n\n  return {\n    \"gasStation\" : containsMarker\n  }\n}\n\nconst getMarkers = location => {\n  let gmarker = [];\n\n  Object.keys(location).map((key, i) => {\n    location[key].map((gasStation, index) => {\n      let marker = new window.google.maps.Marker({\n        title: gasStation.brand,\n        position: new window.google.maps.LatLng(\n          parseFloat(gasStation.lat),\n          parseFloat(gasStation.lng)\n        ),\n        site_id: gasStation.site_id,\n        Street: gasStation.Street\n      });\n\n      gmarker.push(marker);\n    });\n  });\n\n  return gmarker;\n};\n\nexport { getMarkers };\n","function getMinCostRoute(props) {\n  let { tankCapacity, currentFuel, gasStation, truckAverage } = props;\n\n  console.log(gasStation);\n\n  let totalDistance = props.distance;\n\n  let numberOfStation = gasStation.length;\n\n  let totalCost = 0;\n\n  let nextCheapestStation = new Array(gasStation.length);\n\n  let stack = [];\n\n  let data = {};\n\n\n\n  // find nextCheapest corresponding to gasStation\n  for (let i = gasStation.length - 1; i >= 0; i--) {\n    while (\n      stack.length > 0 &&\n      gasStation[stack[0]][\"per_lit_price\"] >= gasStation[i][\"per_lit_price\"]\n    ) {\n      stack.pop();\n    }\n    nextCheapestStation[i] = stack.length === 0 ? -1 : stack[0];\n    stack.push(i);\n  }\n\n\n  currentFuel -= gasStation[0].distance / truckAverage;\n\n\n  /* solve path */\n\n  for (let i = 0; i < gasStation.length; i++) {\n    if (currentFuel < 0) {\n      totalCost = -1;\n      break;\n    }\n\n    let gasNeeded =\n      Math.min(\n        tankCapacity,\n        ((nextCheapestStation[i] === -1\n          ? totalDistance\n          : gasStation[nextCheapestStation[i]].distance) -\n          gasStation[i].distance) / truckAverage\n      );\n\n\n    if (gasNeeded > currentFuel) {\n      data[gasStation[i][\"site_id\"]] = {\n        distance: gasStation[i].distance,\n        Street: gasStation[i].Street,\n        duration: gasStation[i].duration,\n        cost_per_lit: gasStation[i][\"per_lit_price\"],\n        gasFilled: gasNeeded - currentFuel,\n        price_for_gasFilled:\n          (gasNeeded - currentFuel) * gasStation[i][\"per_lit_price\"]\n      };\n\n      totalCost += (gasNeeded - currentFuel) * gasStation[i][\"per_lit_price\"];\n      currentFuel = gasNeeded;\n    }\n\n    currentFuel -=\n      ((i === numberOfStation - 1 ? (totalDistance - 100) : gasStation[i + 1].distance ) -\n        gasStation[i].distance ) / truckAverage\n\n    // console.log('cf', currentFuel)\n  }\n\n  if(totalCost == -1){\n  \n    return -1\n  \n  }\n\n  return [data, totalCost];\n\n}\n\n\nexport default getMinCostRoute;\n","import React from \"react\";\nimport \"./gasStation.sass\";\nimport { Grid, Stack } from \"../General/Grid\";\n\nimport marker from \"../../static/icon/svg/marker.svg\";\nimport stops from \"../../static/icon/svg/stops.svg\";\nimport marker_second from \"../../static/icon/svg/marker_second.svg\";\n\nclass ShowGasStation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return <ShowGasStationJSX data={this.props.opRoute} goback={this.props.goback}/>;\n  }\n}\n\nconst ShowGasStationJSX = (props) => (\n  <div className=\"gas-station-route\">\n    <div className=\"temp\">\n      <h1>Route Details</h1>\n      <div className=\"brand_id\">\n        <img src={marker} style={{ width: \"20px\", height: \"20px\" }} />\n        <p>Loves</p>\n      </div>\n\n      <div className=\"brand_id\">\n        <img src={marker_second} style={{ width: \"20px\", height: \"20px\" }} />\n        <p>Petro Canada</p>\n      </div>\n    </div>\n    <Stack style={{ gridGap: \"10px\" }}>\n\n      {\n        props.data.map( (route, count) =>\n          <Stack style={{gridGap: \"10px\"}} key={count}> \n            <StopDetails str={`${route.start_address} to ${route.end_address}`}/>\n            {\n              Object.keys(route.gasStation).map( (gs, index) => \n                <GasStation {...route.gasStation[gs]} key={index}/>\n              )\n            }\n          <RouteSummary total_cost={route.totalCost} distance={route.distance}/>\n          </Stack>\n        )\n      }\n\n    <div className=\"fuel-op-button\">\n      <button className=\"optimize-route\" onClick={props.goback}>\n        Go Back\n      </button>\n    </div>\n    </Stack>\n  </div>\n);\n\nconst GasStation = (props) => ( \n  <div className=\"gas-station\">\n    <div className=\"station-info\">\n      <img src={marker} style={{ width: \"20px\", height: \"20px\" }} />\n      <p className=\"street\">{props.Street}</p>\n      <span className=\"distance\">{props.distance}</span>\n      <span>{props.duration}</span>\n    </div>\n    <div className=\"price-detail\">\n    <span>\n      Price Per Liter : <span className=\"hl\">{props.cost_per_lit}</span>\n    </span>\n\n    <span>\n      Gas Filled : <span className=\"hl\">{props.gasFilled}</span>\n    </span>\n\n    <span>\n      Total Price : <span className=\"hl\">{props.price_for_gasFilled}</span>\n    </span>\n    </div>\n  </div>\n);\n\nconst StopDetails = ({str}) => (\n  <div className=\"stop-detail\">\n    <p>{str}</p>\n  </div>\n);\n\nconst RouteSummary = (props) => (\n  <div className=\"route-summary\">\n    <span>\n      Total Cost : <span className=\"hl\">{`${props.total_cost} CAD`}</span>\n    </span>\n\n    <span>\n      Total Distance : <span className=\"hl\">{`${props.distance} Km`}</span>\n    </span>\n  </div>\n);\n\nexport default ShowGasStation;\n","import React from \"react\";\nimport FuelOpDetails from \"./details\";\nimport Map from \"./map\";\nimport \"./fuel.sass\";\nimport { Header } from \"../General/Header\";\nimport nearByMarker from \"./nearbyMarkers\";\nimport data from \"./../../static/jsonFuel.json\";\nimport getMinCostRoute from \"./getMinCostRoute\";\nimport ShowGasStation from \"./showGasStation\";\n\nconst FuelOptimzationJSX = props => (\n  <div className=\"fuel-container\">\n    <Header\n      label=\"Fuel Optimization\"\n      style={{\n        marginTop: \"10px\",\n        marginLeft: \"10px\",\n        marginRight: \"10px\"\n      }}\n    />\n    <div className=\"fuel-op-container\">\n      <FuelOpDetails handleDirection={props.handleDirection} hide={props.opRoute.length != 0}/>\n      {\n        (props.opRoute.length != 0)\n        ? <ShowGasStation opRoute={props.opRoute} goback={props.goback}/>\n        : null\n      }\n      <Map directions={props.directions} data={props.data}/>\n    </div>\n  </div>\n);\n\nclass FuelOptimzation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      directions: undefined,\n      data_points: data,\n      optimizingData: false,\n      opRoute: []\n    };\n  }\n\n  goback = () => {\n    this.setState({opRoute : []});\n  }\n\n  handleDirection = (props) => {\n\n    this.setState({optimizingData : true})\n\n    let {source, destination} = props;\n    let wayPoints = props.via\n\n    let {offRoadDistance,\n      tankCapacity,\n      truckAverage,\n      initFuel,\n      fuelRateList,\n      reserve,\n      pricelist} = props;\n\n    const DirectionService = new window.google.maps.DirectionsService();\n\n    let wp = [];\n    for (let item of wayPoints) {\n      wp.push({\n        location: new window.google.maps.LatLng(\n          item.location.lat,\n          item.location.lng\n        ),\n        stopover: true\n      });\n    }\n\n    this.testDirection(source, destination, wp, offRoadDistance, pricelist, initFuel, tankCapacity, truckAverage)\n\n    \n\n    DirectionService.route(\n      {\n        origin: new window.google.maps.LatLng(\n          source.location.lat,\n          source.location.lng\n        ),\n        destination: new window.google.maps.LatLng(\n          destination.location.lat,\n          destination.location.lng\n        ),\n        waypoints: wp, // middle destination\n        travelMode: window.google.maps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status == window.google.maps.DirectionsStatus.OK) {\n          this.setState({ directions: result });\n          let data = nearByMarker(offRoadDistance, result);\n          this.setState({data_points: data})\n        }\n      }\n    );\n  };\n\n  getDirection = (source, destination, od, priceList) => {\n\n\n    const DirectionService = new window.google.maps.DirectionsService();\n\n    return new Promise( (resolve, reject) => DirectionService.route({\n      origin: source.location,\n      destination: destination.location,\n      travelMode: window.google.maps.TravelMode.DRIVING\n    },\n      (result, status) => {\n        if(status == window.google.maps.DirectionsStatus.OK){\n          this.getDistance(source.location, nearByMarker(od, result).gasStation).then(\n            res => resolve({\n              distance: result.routes[0].legs[0].distance.value / 1000,\n              unit: 'km',\n              source: source.location,\n              gasStation: res,\n              start_address: result.routes[0].legs[0].start_address,\n              end_address: result.routes[0].legs[0].end_address\n            }\n              ) // getting markers\n          )\n        } else {\n          reject(status)\n        }\n      }\n    ))\n  }\n\n\n  testDirection = (source, destination, wps, od, pricelist, initFuel, tankCapacity, truckAverage) => {\n\n    // gas station data\n\n    let result = []\n\n    let wp = [...wps]\n\n    source = {\n      location: new window.google.maps.LatLng(\n      source.location.lat,\n      source.location.lng\n    )};\n\n    destination =  {\n      location: new window.google.maps.LatLng(\n      destination.location.lat,\n      destination.location.lng\n    )};\n\n    wp.unshift(source);\n    wp.push(destination);\n\n    for (let index = 0; index < wp.length - 1; index++) {\n      this.getDirection(wp[index], wp[index+1], od)\n      .then(res => {\n        let gs = this.getPriceList(res.gasStation, pricelist)\n        res.gasStation = gs;\n        res.distance += 100\n\n        res.currentFuel = parseFloat((index == 0) ? initFuel : 100 / truckAverage);\n        res.tankCapacity = parseFloat(tankCapacity);\n        res.truckAverage = parseFloat(truckAverage);\n\n        let result = getMinCostRoute(res);\n\n        if(result == -1){\n          return 0\n        }\n\n        res.gasStation = result[0]\n        res.totalCost = result[1]\n\n        this.setOpRoute(res)\n\n        if(index == wp.length - 2){\n          this.setState({optimizingData : false}, () => {\n            if(this.state.opRoute.length == 0) {\n              alert(\"Error in Optimization\");\n            }\n          })\n        }\n      })\n    }\n  }\n\n\n  setOpRoute = (route) => {\n    let r = [...this.state.opRoute];\n    r.push(route);\n    this.setState({opRoute : r})\n  }\n\n\n  getDistance = (source, stops) => {\n    return new Promise((resolve, reject) => {\n\n      let destinations = stops.map(item=>{return({lat:item.lat,lng:item.lng})})\n\n      let split_destination = []\n\n      let all = [];\n\n      while(destinations.length) {\n        split_destination.push(destinations.splice(0,25))\n      }\n\n      for(let i=0;i<split_destination.length;i++){\n        all.push(this.getSingleInstanceDistance(source, split_destination[i]))\n      }\n\n      Promise.all(all).then((res,status) => {\n        let total_stops = []\n\n        res.map( (item, index) => total_stops.push(...item.rows[0].elements))\n        total_stops.map( (stop, i) =>{\n          // console.log(stop);\n          stops[i][\"distance\"] = stop.distance.value / 1000;\n          stops[i][\"duration\"] = stop.duration.text;\n\n        })\n        resolve(stops);\n\n      }).catch(err => reject(err))\n\n    })\n  }\n\n  getPriceList = (gasStation, priceList) => {\n    let data = []\n    gasStation.map( item => {\n      priceList.map( price_item => {\n        if(parseInt(price_item[\"Site\"].trim()) == parseInt(item[\"site_id\"])){\n          item[\"per_lit_price\"] = parseFloat(price_item[\"Your Price\"])\n          data.push(item)\n        }\n      })\n    })\n\n\n    data.sort(function(a,b){\n      return a[\"distance\"] - b[\"distance\"]\n    })\n\n    return data\n  }\n\n\n  getSingleInstanceDistance = ( source, destinations) => {\n    let distanceService = new window.google.maps.DistanceMatrixService()\n\n    return new Promise( (resolve, reject) => {\n      distanceService.getDistanceMatrix({\n        origins: [source], \n        destinations: destinations, \n        travelMode: window.google.maps.TravelMode.DRIVING\n      }, (res, status) => {\n        if(status == \"OK\"){\n          resolve(res,status)\n        } else {\n          reject(res, status)\n        }\n      })\n    })\n  }\n\n\n  render() {\n    return (\n      <FuelOptimzationJSX\n        handleDirection={this.handleDirection}\n        directions={this.state.directions}\n        data={this.state.data_points}\n        opRoute={this.state.opRoute}\n        goback={this.goback}\n      />\n    );\n  }\n}\n\nexport default FuelOptimzation;\n","import FuelOptimzation from './fuel'\n\nexport default FuelOptimzation","import React from \"react\";\nimport App from \"../component/App\";\nimport Header from \"../component/header\";\nimport FuelOptimzation from \"../component/FuelOptimization\";\n\nconst style = {\n  width: \"100%\",\n  height: \"100%\",\n  flex: 1,\n  overflow: \"hidden\",\n  display: \"flex\",\n  flexDirection: \"column\"\n};\n\nconst FuelOp = () => (\n  <div style={{ display: \"flex\", height: \"100%\" }}>\n    <App />\n    <div style={style}>\n      <Header />\n      <FuelOptimzation />\n    </div>\n  </div>\n);\n\nexport default FuelOp;","import { Route, HashRouter as Router, Switch } from \"react-router-dom\";\nimport React from \"react\";\nimport FuelOp from './fuelop'\n\nconst Root = () => (\n  <Router>\n    <Route path=\"/\"  component={FuelOp} />\n  </Router>\n);\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./static/global.sass\";\n\nimport Root from \"./routes/\";\n\n// const Root = () => <h1>Hello World!</h1>\n\nconst App = () => (\n    <Root />\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/marker.2b413bf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker_second.768830b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/stops.0beee21d.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.95228f7b.svg\";"],"sourceRoot":""}